// This Source Code Form is subject to the terms of the Mozilla Public
// License, v2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/

export const cosEvent = {
  assignee: "Assignee",
  name: "Name",
  momentName: "Moment Name",
  createMoment: "Create Moment",
  startTime: "Start Time",
  duration: "Duration",
  sec: "sec",
  description: "Description",
  metadata: "Metadata",
  key: "Key",
  string: "String",
  value: "Value",
  createNewTask: "Create a new task",
  cancel: "Cancel",
  createTask: "Create task",
  searchByKV: "Search moment",
  errorLoading: "Error loading events.",
  noMoment: "No Moments",
  momentDeleted: "Moment deleted",
  momentUpdated: "Moment have been updated",
  errorDeletingEvent: "Error deleting event",
  errorUpdatingEvent: "Error updating event",
  copiedMomentToClipboard: "Copied moment to clipboard",
  triggerTime: "Trigger Time",
  start: "Start",
  end: "End",
  time: "Time",
  elapsed: "Elapsed",
  deleteConfirmTitle: "Delete Moment",
  deleteConfirmPrompt: "Are you sure you want to delete this moment?",
  delete: "Delete",
  createTaskSuccess: "Create task success",
  createTaskFailed: "Create task failed",
  createMomentSuccess: "Create moment success",
  createMomentFailed: "Create moment failed",
  syncTaskFailed: "Sync task failed",
  syncTaskSuccess: "Sync task success",
  syncTask: "Sync task",
  syncTaskTooltip:
    "No integration service configuration information detected, go to Project Management > Integration Services to configure it",
  selectRecordToSaveTheMoment: "Select where to save the moment",
  record: "Record",
  creationUnavailableInCurrentPeriod: "The current time period does not support creating a moment",
  moments: "Moments",
  showMoments: "Show Moments",
  filterMoments: "Filter Moments",
  filterByRecord: "Filter by Record",
  photo: "Photo",
  addPhoto: "Add Photo",
  maxFilesNumber: "Select at most {{maxFilesNumber}} file",
  editMoment: "Edit Moment",
  editMomentSuccess: "Edit Moment Success",
  editMomentFailed: "Edit Moment Failed",
  edit: "Edit",
};
