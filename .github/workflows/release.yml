name: Publish Studio

permissions:
  contents: write
  attestations: write
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: "Version to publish (e.g., v1.0.0)"
        required: true
      environment:
        type: choice
        description: "publish studio to"
        required: true
        default: "saas"
        options:
          - dev
          - saas

jobs:
  build:
    environment: ${{ github.event.inputs.environment }}

    runs-on: macos-latest

    env:
      BUF_BUILD_TOKEN: ${{ secrets.BUF_BUILD_TOKEN }}
      GH_PACKAGES_ORG_TOKEN: ${{ secrets.GH_PACKAGES_ORG_TOKEN }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

    strategy:
      matrix:
        os: [win, linux, darwin]
      fail-fast: false # 一个任务失败不会停止其他任务

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Set cos config file
        id: set_cos_config_file
        run: |
          echo '${{ vars.APP_CONFIG }}' > packages/studio-desktop/src/public/cos-config.js
          cat packages/studio-desktop/src/public/cos-config.js

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Enable corepack
        run: corepack enable yarn

      - name: Install dependencies
        run: yarn install --immutable

      - name: \[bot\] Update version in package.json
        run: yarn run version:all ${{ github.event.inputs.version }}

      - name: Build prod files
        run: |
          yarn run desktop:build:prod

      - name: Build ${{ matrix.os }} version
        run: yarn run package:${{ matrix.os }}

      - name: Upload to OSS
        uses: tvrcgo/oss-action@master
        with:
          key-id: ${{ secrets.OSS_ARTIFACTS_ACCESS_KEY }}
          key-secret: ${{ secrets.OSS_ARTIFACTS_ACCESS_SECRET }}
          region: oss-cn-hangzhou
          bucket: coscene-download
          assets: |
            ${{ matrix.os == 'linux' && format('dist/coStudio-{0}-linux-amd64.deb:/coStudio/deb/{0}/coStudio-{0}-linux-amd64.deb', github.event.inputs.version) || '' }}
            ${{ matrix.os == 'linux' && format('dist/coStudio-{0}-linux-arm64.deb:/coStudio/deb/{0}/coStudio-{0}-linux-arm64.deb', github.event.inputs.version) || '' }}
            ${{ matrix.os == 'darwin' && format('dist/coStudio-{0}-mac-universal.dmg:/coStudio/dmg/{0}/coStudio-{0}-mac-universal.dmg', github.event.inputs.version) || '' }}
            ${{ matrix.os == 'win' && format('dist/coStudio-{0}-win.exe:/coStudio/exe/{0}/coStudio-{0}-win.exe', github.event.inputs.version) || '' }}
            ${{ matrix.os == 'win' && format('dist/coStudio-{0}-win-arm64.exe:/coStudio/exe/{0}/coStudio-{0}-win-arm64.exe', github.event.inputs.version) || '' }}
            ${{ matrix.os == 'win' && format('dist/coStudio-{0}-win-x64.exe:/coStudio/exe/{0}/coStudio-{0}-win-x64.exe', github.event.inputs.version) || '' }}

  notification:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Notification to Feishu
        id: feishu
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.FEISHU_BOT_WEBHOOK_URL_STUDIO_RELEASE }}
          msg_type: text
          content: |
            text: |
              A new version of coScene Studio has been published.
              Version: ${{ github.event.inputs.version }}
              Download:
                mac:
                  https://coscene-download.oss-cn-hangzhou.aliyuncs.com/coStudio/dmg/${{ github.event.inputs.version }}/coStudio-${{ github.event.inputs.version }}-mac-universal.dmg
                win:
                  https://coscene-download.oss-cn-hangzhou.aliyuncs.com/coStudio/exe/${{ github.event.inputs.version }}/coStudio-${{ github.event.inputs.version }}-win.exe
                  https://coscene-download.oss-cn-hangzhou.aliyuncs.com/coStudio/exe/${{ github.event.inputs.version }}/coStudio-${{ github.event.inputs.version }}-win-arm64.exe
                  https://coscene-download.oss-cn-hangzhou.aliyuncs.com/coStudio/exe/${{ github.event.inputs.version }}/coStudio-${{ github.event.inputs.version }}-win-x64.exe
                linux:
                  https://coscene-download.oss-cn-hangzhou.aliyuncs.com/coStudio/deb/${{ github.event.inputs.version }}/coStudio-${{ github.event.inputs.version }}-linux-amd64.deb
                  https://coscene-download.oss-cn-hangzhou.aliyuncs.com/coStudio/deb/${{ github.event.inputs.version }}/coStudio-${{ github.event.inputs.version }}-linux-arm64.deb
              Release notes: https://github.com/coscene-io/honeybee/releases
