name: Publish Studio

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: macos-latest

    env:
      BUF_BUILD_TOKEN: ${{ secrets.BUF_BUILD_TOKEN }}
      GH_PACKAGES_ORG_TOKEN: ${{ secrets.GH_PACKAGES_ORG_TOKEN }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Enable corepack
        run: corepack enable yarn

      - name: Get the version
        id: get_version
        run: |
          echo "new_version=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "is_prerelease=${{ github.event.release.prerelease }}" >> $GITHUB_ENV

      - name: Bump studio version
        run: yarn version minor
        working-directory: packages/studio

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build prod files
        run: |
          yarn run desktop:build:prod

      - name: Build windows version
        run: yarn run package:win

      - name: Build linux version
        run: yarn run package:linux

      - name: Build macOS version
        run: yarn run package:darwin

      # Important to use [skip actions] to avoid triggering other verisoning workflows
      # https://docs.github.com/en/actions/managing-workflow-runs-and-deployments/managing-workflow-runs/skipping-workflow-runs
      # - name: Commit and tag the new version
      #   run: |
      #     git config --global user.name "github-actions[bot]"
      #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
      #     git add package.json packages/studio/package.json yarn.lock
      #     git commit -m "Bump version v${{ env.new_version }} [skip actions]"
      #     git tag "v${{ env.new_version }}"
      #     git push origin main --tags

      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ env.new_version }}"
          name: "v${{ env.new_version }}"
          commit: main
          generateReleaseNotes: true
          prerelease: ${{ env.is_prerelease }}
          artifacts: |
            dist/coScene-${{ env.new_version }}-linux-amd64.deb
            dist/coScene-${{ env.new_version }}-linux-x64.tar.gz
            dist/coScene-${{ env.new_version }}-mac-universal.dmg
            dist/coScene-${{ env.new_version }}-win.exe
            dist/latest-linux.yml
            dist/latest-mac.yml
            dist/latest.yml

      - name: Notification to Feishu
        id: feishu
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.FEISHU_BOT_WEBHOOK_URL_STUDIO_RELEASE }}
          msg_type: text
          content: |
            text: |
              A new version of coScene Studio has been published.
              Version: v${{ env.new_version }}
              Is prerelease: ${{ env.is_prerelease }}
              Release notes:
              ${{ github.event.release.body }}
