name: Publish Studio

permissions:
  contents: write
  attestations: write
  pull-requests: write

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: macos-latest

    env:
      BUF_BUILD_TOKEN: ${{ secrets.BUF_BUILD_TOKEN }}
      GH_PACKAGES_ORG_TOKEN: ${{ secrets.GH_PACKAGES_ORG_TOKEN }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Enable corepack
        run: corepack enable yarn

      - name: Get the version
        id: get_version
        run: |
          echo "new_version=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "is_prerelease=${{ github.event.release.prerelease }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: yarn install --immutable

      - name: \[bot\] Update version in package.json
        # run: yarn run version:all ${{ env.new_version }}
        run: yarn run version:all v24.42.0-rc1

      - name: Commit changes to main
        run: git commit -am "Update version to v24.42.0-rc1"

      - name: Push changes to main
        run: git push

      # - name: Create a pull request
      #   id: create_pr
      #   uses: peter-evans/create-pull-request@v7
      #   with:
      #     token: ${{ github.token }}
      #     title: "[bot] Update version to v${{ env.new_version }}"
      #     branch: update-version-to-v${{ env.new_version }}
      #     commit-message: "[bot] Update version to v${{ env.new_version }}"
      #     delete-branch: true

      # - name: Build prod files
      #   run: |
      #     yarn run desktop:build:prod

      # - name: Build windows version
      #   run: yarn run package:win

      # - name: Build linux version
      #   run: yarn run package:linux

      # - name: Build macOS version
      #   run: yarn run package:darwin

      # - name: Create GitHub Release
      #   id: create_release
      # uses: ncipollo/release-action@v1
      #   with:
      #     tag: "v${{ env.new_version }}"
      #     name: "v${{ env.new_version }}"
      #     commit: main
      #     generateReleaseNotes: true
      #     prerelease: ${{ env.is_prerelease }}
      #     artifacts: |
      #       dist/coScene-studio-linux-amd64.deb
      #       dist/coScene-studio-linux-x64.tar.gz
      #       dist/coScene-studio-mac-universal.dmg
      #       dist/coScene-studio-win.exe
      #       dist/latest-linux.yml
      #       dist/latest-mac.yml
      #       dist/latest.yml

      # - name: Notification to Feishu
      #   id: feishu
      #   uses: foxundermoon/feishu-action@v2
      #   with:
      #     url: ${{ secrets.FEISHU_BOT_WEBHOOK_URL_STUDIO_RELEASE }}
      #     msg_type: text
      #     content: |
      #       text: |
      #         A new version of coScene Studio has been published.
      #         Version: v${{ env.new_version }}
      #         Is prerelease: ${{ env.is_prerelease }}
      #         Download:
      #         Release notes: https://github.com/coscene-io/honeybee/releases
