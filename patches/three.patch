diff --git a/build/three.cjs b/build/three.cjs
index d6f842a902f3d0b61fc80362b54bab069f6fdd14..a74f6e0b643af75ff0f3cbca168d5d665f421179 100644
--- a/build/three.cjs
+++ b/build/three.cjs
@@ -20314,11 +20314,11 @@ class WebGLShaderCache {
 
 	update( material ) {
 
-		const vertexShader = material.vertexShader;
-		const fragmentShader = material.fragmentShader;
+    const vertexShaderKey = material.vertexShaderKey != undefined ? material.vertexShaderKey : material.vertexShader;
+		const fragmentShaderKey = material.fragmentShaderKey != undefined ? material.fragmentShaderKey : material.fragmentShader;
+		const vertexShaderStage = this._getShaderStage(vertexShaderKey, material.vertexShader);
+		const fragmentShaderStage = this._getShaderStage(fragmentShaderKey, material.fragmentShader);
 
-		const vertexShaderStage = this._getShaderStage( vertexShader );
-		const fragmentShaderStage = this._getShaderStage( fragmentShader );
 
 		const materialShaders = this._getShaderCacheForMaterial( material );
 
@@ -20360,13 +20360,15 @@ class WebGLShaderCache {
 
 	getVertexShaderID( material ) {
 
-		return this._getShaderStage( material.vertexShader ).id;
+    const vertexShaderKey = material.vertexShaderKey != undefined ? material.vertexShaderKey : material.vertexShader;
+		return this._getShaderStage(vertexShaderKey, material.vertexShader).id;
 
 	}
 
 	getFragmentShaderID( material ) {
 
-		return this._getShaderStage( material.fragmentShader ).id;
+    const fragmentShaderKey = material.fragmentShaderKey != undefined ? material.fragmentShaderKey : material.fragmentShader;
+		return this._getShaderStage(fragmentShaderKey, material.fragmentShader).id;
 
 	}
 
diff --git a/build/three.module.js b/build/three.module.js
index d33f9c318f76da39df843683fd7cee5ca2c1b1ff..894d05eae7cd0eb076b427a1cfa86c852a4f9990 100644
--- a/build/three.module.js
+++ b/build/three.module.js
@@ -20310,28 +20310,20 @@ class WebGLShaderCache {
 
 	}
 
-	update( material ) {
-
-		const vertexShader = material.vertexShader;
-		const fragmentShader = material.fragmentShader;
-
-		const vertexShaderStage = this._getShaderStage( vertexShader );
-		const fragmentShaderStage = this._getShaderStage( fragmentShader );
-
-		const materialShaders = this._getShaderCacheForMaterial( material );
-
-		if ( materialShaders.has( vertexShaderStage ) === false ) {
-
-			materialShaders.add( vertexShaderStage );
-			vertexShaderStage.usedTimes ++;
-
+  update(material) {
+    const vertexShaderKey = material.vertexShaderKey != undefined ? material.vertexShaderKey : material.vertexShader;
+    const fragmentShaderKey = material.fragmentShaderKey != undefined ? material.fragmentShaderKey : material.fragmentShader;
+    const vertexShaderStage = this._getShaderStage(vertexShaderKey, material.vertexShader);
+    const fragmentShaderStage = this._getShaderStage(fragmentShaderKey, material.fragmentShader);
+    const materialShaders = this._getShaderCacheForMaterial(material);
+    if (materialShaders.has(vertexShaderStage) === false) {
+      materialShaders.add(vertexShaderStage);
+      vertexShaderStage.usedTimes++;
 		}
 
-		if ( materialShaders.has( fragmentShaderStage ) === false ) {
-
-			materialShaders.add( fragmentShaderStage );
-			fragmentShaderStage.usedTimes ++;
-
+    if (materialShaders.has(fragmentShaderStage) === false) {
+      materialShaders.add(fragmentShaderStage);
+      fragmentShaderStage.usedTimes++;
 		}
 
 		return this;
@@ -20356,17 +20348,15 @@ class WebGLShaderCache {
 
 	}
 
-	getVertexShaderID( material ) {
-
-		return this._getShaderStage( material.vertexShader ).id;
-
-	}
+  getVertexShaderID(material) {
+    const vertexShaderKey = material.vertexShaderKey != undefined ? material.vertexShaderKey : material.vertexShader;
+    return this._getShaderStage(vertexShaderKey, material.vertexShader).id;
+  }
 
-	getFragmentShaderID( material ) {
-
-		return this._getShaderStage( material.fragmentShader ).id;
-
-	}
+  getFragmentShaderID(material) {
+    const fragmentShaderKey = material.fragmentShaderKey != undefined ? material.fragmentShaderKey : material.fragmentShader;
+    return this._getShaderStage(fragmentShaderKey, material.fragmentShader).id;
+  }
 
 	dispose() {
 
diff --git a/src/renderers/webgl/WebGLShaderCache.js b/src/renderers/webgl/WebGLShaderCache.js
index 4e0fffcbb035c5229f3eb9672ba3b129db78df89..bd86125312369e0e564d7bd649295b3a7456130c 100644
--- a/src/renderers/webgl/WebGLShaderCache.js
+++ b/src/renderers/webgl/WebGLShaderCache.js
@@ -9,29 +9,21 @@ class WebGLShaderCache {
 
 	}
 
-	update( material ) {
-
-		const vertexShader = material.vertexShader;
-		const fragmentShader = material.fragmentShader;
-
-		const vertexShaderStage = this._getShaderStage( vertexShader );
-		const fragmentShaderStage = this._getShaderStage( fragmentShader );
-
-		const materialShaders = this._getShaderCacheForMaterial( material );
-
-		if ( materialShaders.has( vertexShaderStage ) === false ) {
-
-			materialShaders.add( vertexShaderStage );
-			vertexShaderStage.usedTimes ++;
-
-		}
-
-		if ( materialShaders.has( fragmentShaderStage ) === false ) {
-
-			materialShaders.add( fragmentShaderStage );
-			fragmentShaderStage.usedTimes ++;
-
-		}
+  update(material) {
+    const vertexShaderKey = material.vertexShaderKey != undefined ? material.vertexShaderKey : material.vertexShader;
+    const fragmentShaderKey = material.fragmentShaderKey != undefined ? material.fragmentShaderKey : material.fragmentShader;
+    const vertexShaderStage = this._getShaderStage(vertexShaderKey, material.vertexShader);
+    const fragmentShaderStage = this._getShaderStage(fragmentShaderKey, material.fragmentShader);
+    const materialShaders = this._getShaderCacheForMaterial(material);
+    if (materialShaders.has(vertexShaderStage) === false) {
+    	materialShaders.add(vertexShaderStage);
+    	vertexShaderStage.usedTimes++;
+    }
+
+    if (materialShaders.has(fragmentShaderStage) === false) {
+      materialShaders.add(fragmentShaderStage);
+      fragmentShaderStage.usedTimes++;
+    }
 
 		return this;
 
@@ -55,17 +47,15 @@ class WebGLShaderCache {
 
 	}
 
-	getVertexShaderID( material ) {
-
-		return this._getShaderStage( material.vertexShader ).id;
-
-	}
-
-	getFragmentShaderID( material ) {
+  getVertexShaderID(material) {
+    const vertexShaderKey = material.vertexShaderKey != undefined ? material.vertexShaderKey : material.vertexShader;
+    return this._getShaderStage(vertexShaderKey, material.vertexShader).id;
+  }
 
-		return this._getShaderStage( material.fragmentShader ).id;
-
-	}
+  getFragmentShaderID(material) {
+    const fragmentShaderKey = material.fragmentShaderKey != undefined ? material.fragmentShaderKey : material.fragmentShader;
+    return this._getShaderStage(fragmentShaderKey, material.fragmentShader).id;
+  }
 
 	dispose() {
 
